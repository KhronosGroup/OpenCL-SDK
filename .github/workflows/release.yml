on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  windows-binary:
    runs-on: windows-2022
    strategy:
      matrix:
        VER: [v143]
        GEN: [Visual Studio 17 2022]
        BIN: [x64, x86]

    steps:
    - name: Checkout OpenCL-SDK
      uses: actions/checkout@v2

    - name: Initialize git submodules
      shell: pwsh
      run: |
        & git submodule init
        & git submodule update

    - name: Create Build Environment
      shell: pwsh
      run: |
        # Parallelize MSBuild across projects
        [Environment]::SetEnvironmentVariable('UseMultiToolTask', 'true', [EnvironmentVariableTarget]::User)

    - name: Configure
      shell: pwsh
      run: |
        $BIN = if('${{matrix.BIN}}' -eq 'x86') {'Win32'} else {'x64'}
        & cmake `
          -G '${{matrix.GEN}}' `
          -A ${BIN} `
          -T ${{matrix.VER}} `
          -S "${env:GITHUB_WORKSPACE}" `
          -B "${env:GITHUB_WORKSPACE}\build" `
          -D BUILD_DOCS=OFF `
          -D BUILD_TESTING=OFF `
          -D BUILD_TESTS=OFF `
          -D OPENCL_SDK_BUILD_SAMPLES=OFF `
          -D OPENCL_ICD_LOADER_BUILD_TESTING=OFF

    - name: Build
      shell: pwsh
      run: |
        & cmake `
          --build "${env:GITHUB_WORKSPACE}\build" `
          --config Release `
          -- `
          /verbosity:minimal `
          /maxCpuCount `
          /noLogo

    - name: Install
      shell: pwsh
      run: |
        & cmake `
          --install "${env:GITHUB_WORKSPACE}\build" `
          --prefix "${env:GITHUB_WORKSPACE}\install" `
          --config Release

    - name: Package Binary
      shell: pwsh
      run: |
        $BIN = if('${{matrix.BIN}}' -eq 'x86') {'win32'} else {'win64'}
        & cpack `
          --config "${env:GITHUB_WORKSPACE}\build\CPackConfig.cmake" `
          -G ZIP `
          -C Release `
          -B "${env:GITHUB_WORKSPACE}\package" `
        Rename-Item "${env:GITHUB_WORKSPACE}\package\OpenCL-SDK-${{github.ref_name}}-${BIN}.zip" "OpenCL-SDK-${{github.ref_name}}-Win-${{matrix.BIN}}.zip"

    - name: Release Binary
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        files: |
          package/OpenCL-SDK-${{github.ref_name}}-Win-${{matrix.BIN}}.zip

  source:
    name: Source Release (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        OS: [ubuntu-20.04, windows-2022]

    steps:
    - name: Checkout OpenCL-SDK
      uses: actions/checkout@v2

    - name: Initialize git submodules
      shell: pwsh
      run: |
        & git submodule init
        & git submodule update

    - name: Configure
      shell: pwsh
      run: |
        & cmake `
          -S "${env:GITHUB_WORKSPACE}" `
          -B "${env:GITHUB_WORKSPACE}\build" `
          -D BUILD_DOCS=OFF `
          -D BUILD_TESTING=OFF `
          -D BUILD_TESTS=OFF `
          -D OPENCL_SDK_BUILD_SAMPLES=OFF `
          -D OPENCL_ICD_LOADER_BUILD_TESTING=OFF `
          -D CPACK_SOURCE_IGNORE_FILES="/\\.git/;/\\.gitignore;/\\.gitmodules;/\\.gitlab/;/\\.github/;/\\.reuse/;/\\.appveyor.yml;/build/;/install/;/package/"

    - name: Package Source
      shell: pwsh
      run: |
        $Generator = if('${{matrix.OS}}' -match 'windows') {'ZIP'} else {'TGZ'}
        & cpack `
          --config "${env:GITHUB_WORKSPACE}\build\CPackSourceConfig.cmake" `
          -G $Generator `
          -C Release `
          -B "${env:GITHUB_WORKSPACE}\package"

    - name: Release Source
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        files: |
          package/OpenCL-SDK-${{github.ref_name}}-Source.*